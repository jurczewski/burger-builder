{"version":3,"sources":["components/Layout/Layout.jsx","components/Burger/BurgerIngredient/BurgerIngredient.jsx","components/Burger/Burger.jsx","components/Burger/BuildControls/BuildControl/BuildControl.jsx","components/Burger/BuildControls/BuildControls.jsx","containers/BurgerBuilder/BurgerBuilder.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["layout","props","className","children","burgerIngredient","ingredient","type","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length","buildControl","label","controls","buildControls","ctrl","initialState","salad","bacon","cheese","meat","builderBuilder","useState","order","App","BurgerBuilder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAUeA,G,YAPA,SAACC,GAAD,OACd,qCACC,gEACA,sBAAMC,UAAU,UAAhB,SAA2BD,EAAME,gB,cCoCpBC,G,MAtCU,SAACH,GACzB,IAAII,EAAa,KAEjB,OAAQJ,EAAMK,MACb,IAAK,eACJD,EAAa,qBAAKH,UAAU,gBAC5B,MACD,IAAK,YACJG,EACC,sBAAKH,UAAU,WAAf,UACC,qBAAKA,UAAU,WACf,qBAAKA,UAAU,cAGjB,MACD,IAAK,OACJG,EAAa,qBAAKH,UAAU,SAC5B,MACD,IAAK,SACJG,EAAa,qBAAKH,UAAU,WAC5B,MACD,IAAK,QACJG,EAAa,qBAAKH,UAAU,UAC5B,MACD,IAAK,QACJG,EAAa,qBAAKH,UAAU,UAC5B,MACD,QACCG,EAAa,KAGf,OAAOA,ICNOE,G,MAxBA,SAACN,GACf,IAAIO,EAAyBC,OAAOC,KAAKT,EAAMU,aAC7CC,KAAI,SAACC,GACL,OAAO,YAAIC,MAAMb,EAAMU,YAAYE,KAASD,KAAI,SAACG,EAAGC,GACnD,OAAO,cAAC,EAAD,CAAkCV,KAAMO,GAAjBA,EAAQG,SAGvCC,QAAO,SAACC,EAAKC,GACb,OAAOD,EAAIE,OAAOD,KAChB,IAMJ,OAJsC,IAAlCX,EAAuBa,SAC1Bb,EAAyB,kEAIzB,sBAAKN,UAAU,SAAf,UACC,cAAC,EAAD,CAAkBI,KAAK,cACtBE,EACD,cAAC,EAAD,CAAkBF,KAAK,sBCPXgB,G,MAdM,SAACrB,GACrB,OACC,sBAAKC,UAAU,eAAf,UACC,qBAAKA,UAAU,QAAf,SAAwBD,EAAMsB,QAC9B,wBAAQjB,KAAK,SAASJ,UAAU,OAAhC,kBAGA,wBAAQI,KAAK,SAASJ,UAAU,OAAhC,uBCNGsB,G,MAAW,CAChB,CAAED,MAAO,QAASjB,KAAM,SACxB,CAAEiB,MAAO,QAASjB,KAAM,SACxB,CAAEiB,MAAO,SAAUjB,KAAM,UACzB,CAAEiB,MAAO,OAAQjB,KAAM,UAaTmB,EAVO,WACrB,OACC,qBAAKvB,UAAU,gBAAf,SACEsB,EAASZ,KAAI,SAACc,GACd,OAAO,cAAC,EAAD,CAA+BH,MAAOG,EAAKH,OAAxBG,EAAKH,aCV7BI,EAAe,CACpBhB,YAAa,CACZiB,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,KAAM,IAeOC,EAXQ,WAAO,IAAD,EACFC,mBAASN,GADP,mBACrBO,EADqB,UAG5B,OACC,qCACC,cAAC,EAAD,CAAQvB,YAAauB,EAAMvB,cAC3B,cAAC,EAAD,QCNYwB,MAVf,WACC,OACC,mCACC,cAAC,EAAD,UACC,cAACC,EAAD,SCIWC,EAZS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGXQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.ba0d1d54.chunk.js","sourcesContent":["import React from 'react';\nimport './Layout.css';\n\nconst layout = (props) => (\n\t<>\n\t\t<div>Toolbar, SideDrawer, Backdrop</div>\n\t\t<main className=\"Content\">{props.children}</main>\n\t</>\n);\n\nexport default layout;\n","import React from 'react';\nimport './BurgerIngredient.css';\nimport PropTypes from 'prop-types';\n\nconst burgerIngredient = (props) => {\n\tlet ingredient = null;\n\n\tswitch (props.type) {\n\t\tcase 'bread-bottom':\n\t\t\tingredient = <div className=\"BreadBottom\" />;\n\t\t\tbreak;\n\t\tcase 'bread-top':\n\t\t\tingredient = (\n\t\t\t\t<div className=\"BreadTop\">\n\t\t\t\t\t<div className=\"Seeds1\" />\n\t\t\t\t\t<div className=\"Seeds2\" />\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'meat':\n\t\t\tingredient = <div className=\"Meat\" />;\n\t\t\tbreak;\n\t\tcase 'cheese':\n\t\t\tingredient = <div className=\"Cheese\" />;\n\t\t\tbreak;\n\t\tcase 'salad':\n\t\t\tingredient = <div className=\"Salad\" />;\n\t\t\tbreak;\n\t\tcase 'bacon':\n\t\t\tingredient = <div className=\"Bacon\" />;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tingredient = null;\n\t}\n\n\treturn ingredient;\n};\n\nburgerIngredient.propTypes = {\n\ttype: PropTypes.string.isRequired,\n};\n\nexport default burgerIngredient;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\nimport './Burger.css';\n\nconst burger = (props) => {\n\tlet transformedIngredients = Object.keys(props.ingredients)\n\t\t.map((igKey) => {\n\t\t\treturn [...Array(props.ingredients[igKey])].map((_, i) => {\n\t\t\t\treturn <BurgerIngredient key={igKey + i} type={igKey} />;\n\t\t\t});\n\t\t})\n\t\t.reduce((arr, el) => {\n\t\t\treturn arr.concat(el);\n\t\t}, []);\n\n\tif (transformedIngredients.length === 0) {\n\t\ttransformedIngredients = <p>Please start adding ingredients!</p>;\n\t}\n\n\treturn (\n\t\t<div className=\"Burger\">\n\t\t\t<BurgerIngredient type=\"bread-top\" />\n\t\t\t{transformedIngredients}\n\t\t\t<BurgerIngredient type=\"bread-bottom\" />\n\t\t</div>\n\t);\n};\n\nexport default burger;\n","import React from 'react';\nimport './BuildControl.css';\n\nconst buildControl = (props) => {\n\treturn (\n\t\t<div className=\"BuildControl\">\n\t\t\t<div className=\"Label\">{props.label}</div>\n\t\t\t<button type=\"button\" className=\"Less\">\n\t\t\t\tLess\n\t\t\t</button>\n\t\t\t<button type=\"button\" className=\"More\">\n\t\t\t\tMore\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default buildControl;\n","import React from 'react';\nimport BuildControl from './BuildControl/BuildControl';\nimport './BuildControls.css';\n\nconst controls = [\n\t{ label: 'Salad', type: 'salad' },\n\t{ label: 'Bacon', type: 'bacon' },\n\t{ label: 'Cheese', type: 'cheese' },\n\t{ label: 'Meat', type: 'meat' },\n];\n\nconst buildControls = () => {\n\treturn (\n\t\t<div className=\"BuildControls\">\n\t\t\t{controls.map((ctrl) => {\n\t\t\t\treturn <BuildControl key={ctrl.label} label={ctrl.label} />;\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default buildControls;\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\n\nconst initialState = {\n\tingredients: {\n\t\tsalad: 0,\n\t\tbacon: 0,\n\t\tcheese: 0,\n\t\tmeat: 0,\n\t},\n};\n\nconst builderBuilder = () => {\n\tconst [order, setOrder] = useState(initialState);\n\n\treturn (\n\t\t<>\n\t\t\t<Burger ingredients={order.ingredients} />\n\t\t\t<BuildControls />\n\t\t</>\n\t);\n};\n\nexport default builderBuilder;\n","import React from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<Layout>\n\t\t\t\t<BurgerBuilder />\n\t\t\t</Layout>\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","/* eslint-disable import/no-named-as-default */\n/* eslint-disable import/no-named-as-default-member */\n/* eslint-disable import/named */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}