{"version":3,"sources":["components/Layout/Layout.jsx","components/Burger/BurgerIngredient/BurgerIngredient.jsx","components/Burger/Burger.jsx","containers/BurgerBuilder/BurgerBuilder.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["layout","props","className","children","burgerIngredient","ingredient","type","burger","BuilderBuilder","Component","App","BurgerBuilder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAUeA,G,YAPA,SAACC,GAAD,OACd,qCACC,gEACA,sBAAMC,UAAU,UAAhB,SAA2BD,EAAME,gB,4BCoCpBC,G,MAtCU,SAACH,GACzB,IAAII,EAAa,KAEjB,OAAQJ,EAAMK,MACb,IAAK,eACJD,EAAa,qBAAKH,UAAU,gBAC5B,MACD,IAAK,YACJG,EACC,sBAAKH,UAAU,WAAf,UACC,qBAAKA,UAAU,WACf,qBAAKA,UAAU,cAGjB,MACD,IAAK,OACJG,EAAa,qBAAKH,UAAU,SAC5B,MACD,IAAK,SACJG,EAAa,qBAAKH,UAAU,WAC5B,MACD,IAAK,QACJG,EAAa,qBAAKH,UAAU,UAC5B,MACD,IAAK,QACJG,EAAa,qBAAKH,UAAU,UAC5B,MACD,QACCG,EAAa,KAGf,OAAOA,ICpBOE,G,MAXA,WACd,OACC,sBAAKL,UAAU,SAAf,UACC,cAAC,EAAD,CAAkBI,KAAK,cACvB,cAAC,EAAD,CAAkBA,KAAK,WACvB,cAAC,EAAD,CAAkBA,KAAK,SACvB,cAAC,EAAD,CAAkBA,KAAK,sBCKXE,E,uKATb,OACC,qCACC,cAAC,EAAD,IACA,wD,GALyBC,aCUdC,MAVf,WACC,OACC,mCACC,cAAC,EAAD,UACC,cAACC,EAAD,SCIWC,EAZS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGXQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.570ed737.chunk.js","sourcesContent":["import React from 'react';\nimport './Layout.css';\n\nconst layout = (props) => (\n\t<>\n\t\t<div>Toolbar, SideDrawer, Backdrop</div>\n\t\t<main className=\"Content\">{props.children}</main>\n\t</>\n);\n\nexport default layout;\n","import React from 'react';\nimport './BurgerIngredient.css';\nimport PropTypes from 'prop-types';\n\nconst burgerIngredient = (props) => {\n\tlet ingredient = null;\n\n\tswitch (props.type) {\n\t\tcase 'bread-bottom':\n\t\t\tingredient = <div className=\"BreadBottom\" />;\n\t\t\tbreak;\n\t\tcase 'bread-top':\n\t\t\tingredient = (\n\t\t\t\t<div className=\"BreadTop\">\n\t\t\t\t\t<div className=\"Seeds1\" />\n\t\t\t\t\t<div className=\"Seeds2\" />\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'meat':\n\t\t\tingredient = <div className=\"Meat\" />;\n\t\t\tbreak;\n\t\tcase 'cheese':\n\t\t\tingredient = <div className=\"Cheese\" />;\n\t\t\tbreak;\n\t\tcase 'salad':\n\t\t\tingredient = <div className=\"Salad\" />;\n\t\t\tbreak;\n\t\tcase 'bacon':\n\t\t\tingredient = <div className=\"Bacon\" />;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tingredient = null;\n\t}\n\n\treturn ingredient;\n};\n\nburgerIngredient.propTypes = {\n\ttype: PropTypes.string.isRequired,\n};\n\nexport default burgerIngredient;\n","import React from 'react';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\nimport './Burger.css';\n\nconst burger = () => {\n\treturn (\n\t\t<div className=\"Burger\">\n\t\t\t<BurgerIngredient type=\"bread-top\" />\n\t\t\t<BurgerIngredient type=\"cheese\" />\n\t\t\t<BurgerIngredient type=\"meat\" />\n\t\t\t<BurgerIngredient type=\"bread-bottom\" />\n\t\t</div>\n\t);\n};\n\nexport default burger;\n","/* eslint-disable react/prefer-stateless-function */\nimport React, { Component } from 'react';\nimport Burger from '../../components/Burger/Burger';\n\nclass BuilderBuilder extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Burger />\n\t\t\t\t<div>Build Controls</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default BuilderBuilder;\n","import React from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<Layout>\n\t\t\t\t<BurgerBuilder />\n\t\t\t</Layout>\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","/* eslint-disable import/no-named-as-default */\n/* eslint-disable import/no-named-as-default-member */\n/* eslint-disable import/named */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}